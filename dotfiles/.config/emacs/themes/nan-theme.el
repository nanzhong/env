;;; nan-theme.el --- NaN Theme

;; Copyright 2018-present, all rights reserved.
;;
;; Code licensed under MIT licence.

;; Author: Nan Zhong <me@nanzho.ng>
;; Version: 0.1
;; Package-Requires: ((emacs "24"))
;; URL: https://github.com/nanzhong/workstation

;;; Commentary:

;; A simple theme

;;; Code:

(deftheme nan
  "A simple theme")

(let* (;; copic colours
       (BV0000   "#eeecf5")
       (BV000    "#eee7f1")
       (BV00     "#e9e3f0")
       (BV01     "#c8c4df")
       (BV02     "#bec4df")
       (BV04     "#92a4ce")
       (BV08     "#b08cb9")
       (BV11     "#e0dcec")
       (BV13     "#989ec9")
       (BV17     "#7e90bd")
       (BV20     "#dce3f2")
       (BV23     "#c4cde1")
       (BV25     "#908fac")
       (BV29     "#2e4256")
       (BV31     "#e6e8f4")
       (BV34     "#7f92bd")
       (V0000    "#f3f1f8")
       (V000     "#f7f2f7")
       (V01      "#edccde")
       (V04      "#edb9d1")
       (V05      "#ecb4ce")
       (V06      "#dba5c6")
       (V09      "#97599a")
       (V12      "#f2dfeb")
       (V15      "#e0b6d1")
       (V17      "#b3a1c7")
       (V20      "#d5ccd6")
       (V22      "#7b6f90")
       (V25      "#b6aec6")
       (V28      "#787aa0")
       (V91      "#efd0d8")
       (V93      "#edcddf")
       (V95      "#c589aa")
       (V99      "#4f334d")
       (RV0000   "#f7e9f1")
       (RV000    "#f7e9f1")
       (RV00     "#f3d3e9")
       (RV02     "#fcdee9")
       (RV04     "#f9b0c5")
       (RV06     "#f692b3")
       (RV09     "#e87cac")
       (RV10     "#fef1f5")
       (RV11     "#fcdfe3")
       (RV13     "#fcd3de")
       (RV14     "#f8a0bc")
       (RV17     "#e58bb5")
       (RV19     "#de73a7")
       (RV21     "#feeeed")
       (RV23     "#fbc6cf")
       (RV25     "#f8a1c1")
       (RV29     "#f14a81")
       (RV32     "#fddcd7")
       (RV34     "#fbbcb8")
       (RV42     "#fbc7bf")
       (RV52     "#dc9cb6")
       (RV55     "#d96196")
       (RV63     "#dB8ab5")
       (RV66     "#8d3765")
       (RV69     "#9c6276")
       (RV91     "#eddee8")
       (RV93     "#eec3d2")
       (RV95     "#c694aa")
       (RV99     "#6e5764")
       (R0000    "#fcf6f2")
       (R000     "#fff6f2")
       (R00      "#fff5ef")
       (R01      "#fde0da")
       (R02      "#fedcd0")
       (R05      "#f89d85")
       (R08      "#f46d56")
       (R11      "#ffe8dd")
       (R12      "#fedccb")
       (R14      "#f9a89d")
       (R17      "#f78f72")
       (R20      "#fee0d9")
       (R21      "#fcb6ac")
       (R22      "#ff9999")
       (R24      "#f57f82")
       (R27      "#f25364")
       (R29      "#ef0047")
       (R30      "#feeae5")
       (R32      "#fcccc4")
       (R35      "#f57a8a")
       (R37      "#ed787d")
       (R39      "#d65382")
       (R43      "#f18f96")
       (R46      "#e6506d")
       (R56      "#c36679")
       (R59      "#c55f7c")
       (R81      "#f6d4dc")
       (R83      "#f5aabf")
       (R85      "#de769a")
       (R89      "#91354d")
       (YR0000   "#fcf6eb")
       (YR000    "#fff1e1")
       (YR00     "#fedfc7")
       (YR01     "#fdd6b7")
       (YR02     "#ffe4cf")
       (YR04     "#ffcf6d")
       (YR07     "#f67833")
       (YR09     "#f35700")
       (YR12     "#fee391")
       (YR14     "#ffd34c")
       (YR15     "#ffd198")
       (YR16     "#ffc417")
       (YR18     "#f57335")
       (YR20     "#ffe9c9")
       (YR21     "#f8e5bb")
       (YR23     "#f2db98")
       (YR24     "#f6dc6b")
       (YR27     "#d86745")
       (YR30     "#f7edc9")
       (YR31     "#ffe6b2")
       (YR61     "#fee2cc")
       (YR65     "#febb65")
       (YR68     "#f67700")
       (YR82     "#ffd198")
       (Y0000    "#fffef7")
       (Y000     "#fffff6")
       (Y00      "#fffee5")
       (Y02      "#f9f5a0")
       (Y04      "#f3e953")
       (Y06      "#fff772")
       (Y08      "#fff500")
       (Y11      "#fffcd3")
       (Y13      "#fcf9b7")
       (Y15      "#ffee72")
       (Y17      "#ffea55")
       (Y18      "#fff257")
       (Y19      "#ffee39")
       (Y21      "#fff2c9")
       (Y23      "#fdeabe")
       (Y26      "#f6e56f")
       (Y28      "#d5b56e")
       (Y32      "#fbe6ca")
       (Y35      "#ffe081")
       (Y38      "#ffff99")
       (YG0000   "#f7f9e4")
       (YG00     "#eeeba6")
       (YG01     "#eef2c8")
       (YG03     "#eaeeb2")
       (YG05     "#e2e999")
       (YG06     "#d3e398")
       (YG07     "#b6d135")
       (YG09     "#93c560")
       (YG11     "#ecf3d5")
       (YG13     "#dfe9a6")
       (YG17     "#85bf4a")
       (YG21     "#f9f8c6")
       (YG23     "#efef98")
       (YG25     "#dce47f")
       (YG41     "#e1eed9")
       (YG45     "#c5e0be")
       (YG61     "#b7ca90")
       (YG63     "#b5d2ab")
       (YG67     "#97c592")
       (YG91     "#e4dfb8")
       (YG93     "#dedba6")
       (YG95     "#dbd267")
       (YG97     "#aaa000")
       (YG99     "#6a7800")
       (G0000    "#f6faf6")
       (G000     "#f7fbf7")
       (G00      "#eaf5f6")
       (G02      "#dbecd9")
       (G03      "#b0de7f")
       (G05      "#7dc079")
       (G07      "#8fc676")
       (G09      "#8fc460")
       (G12      "#deeccb")
       (G14      "#aad294")
       (G16      "#76c19c")
       (G17      "#27ae7d")
       (G19      "#49b68a")
       (G20      "#f2f7e0")
       (G21      "#d3e8d3")
       (G24      "#d1e4bb")
       (G28      "#239665")
       (G29      "#3e8667")
       (G40      "#ecf4e3")
       (G43      "#92b35c")
       (G46      "#54895d")
       (G82      "#dbe2c4")
       (G85      "#b3cdb5")
       (G94      "#aab38e")
       (G99      "#7b8e3f")
       (BG0000   "#f5f9f6")
       (BG000    "#f7fbf9")
       (BG01     "#d6ebf8")
       (BG02     "#d4ebed")
       (BG05     "#9cd5e6")
       (BG07     "#33b8d2")
       (BG09     "#09b1cd")
       (BG10     "#e7f3f2")
       (BG11     "#daeef2")
       (BG13     "#d3eaeb")
       (BG15     "#b5ddd6")
       (BG18     "#56beb3")
       (BG23     "#cde7e0")
       (BG32     "#cce6db")
       (BG34     "#b8dedb")
       (BG45     "#c1e2e3")
       (BG49     "#15b2bc")
       (BG53     "#5cb6bd")
       (BG57     "#04a2ad")
       (BG70     "#e5eee3")
       (BG72     "#88bec1")
       (BG75     "#b5ddd6")
       (BG78     "#48756b")
       (BG90     "#d1ccb8")
       (BG93     "#cbcec4")
       (BG96     "#9ab09e")
       (BG99     "#89a996")
       (B0000    "#f6fbfe")
       (B000     "#edf6f6")
       (B00      "#eaf6f9")
       (B01      "#e1f1f3")
       (B02      "#c5e6f0")
       (B04      "#8dd1e7")
       (B05      "#64c5e5")
       (B06      "#00ace2")
       (B12      "#d6eaf0")
       (B14      "#8dd1eb")
       (B16      "#01bae7")
       (B18      "#2991c9")
       (B21      "#e6f1fa")
       (B23      "#abcbe9")
       (B24      "#a3d5f1")
       (B26      "#7fbbe3")
       (B28      "#1571b0")
       (B29      "#0077ba")
       (B32      "#eaf3f7")
       (B34      "#9bcbeb")
       (B37      "#0472a3")
       (B39      "#286aa7")
       (B41      "#eaf3fb")
       (B45      "#8fc7ea")
       (B52      "#c1d6e1")
       (B60      "#e4e8f4")
       (B63      "#bcc6e2")
       (B66      "#6473b4")
       (B69      "#1967a7")
       (B79      "#31418f")
       (B91      "#e1e9ed")
       (B93      "#abcbdf")
       (B95      "#88b0ca")
       (B97      "#45809d")
       (B99      "#004d7a")
       (E0000    "#fffaf3")
       (E000     "#fff8f1")
       (E00      "#fff6ee")
       (E01      "#fff2e9")
       (E02      "#fff1e6")
       (E04      "#eccace")
       (E07      "#d99278")
       (E08      "#d5745c")
       (E09      "#e27453")
       (E11      "#ffefde")
       (E13      "#efd2bb")
       (E15      "#fdc797")
       (E17      "#c46755")
       (E18      "#97564a")
       (E19      "#ce5425")
       (E21      "#ffe9d2")
       (E23      "#aa6a4b")
       (E25      "#dfb693")
       (E27      "#ac866d")
       (E29      "#903f0a")
       (E30      "#f7efcf")
       (E31      "#f6ecd7")
       (E33      "#f6dcbd")
       (E34      "#f5d7b3")
       (E35      "#eed2b2")
       (E37      "#d9a566")
       (E39      "#d27d33")
       (E40      "#f7f0e5")
       (E41      "#fff4e8")
       (E42      "#f2e8d3")
       (E43      "#f0e6cb")
       (E44      "#d4c9b6")
       (E47      "#9a826c")
       (E49      "#7a5d45")
       (E50      "#f7f0f1")
       (E51      "#fff1de")
       (E53      "#f6eccc")
       (E55      "#f5e6c4")
       (E57      "#c29a6a")
       (E59      "#ad9076")
       (E70      "#f1e9e2")
       (E71      "#ebe1da")
       (E74      "#b5998c")
       (E77      "#947157")
       (E79      "#52382d")
       (E81      "#dccd98")
       (E84      "#b4955f")
       (E87      "#5b4d38")
       (E89      "#7b746a")
       (E93      "#fedbc2")
       (E95      "#fec788")
       (E97      "#f3a962")
       (E99      "#c06508")
       (C-00     "#f1f4f6")
       (C-0      "#edf2f4")
       (C-1      "#e4eaed")
       (C-2      "#d9e0e4")
       (C-3      "#d0d5da")
       (C-4      "#b9c1c7")
       (C-5      "#a4aeb2")
       (C-6      "#939ba1")
       (C-7      "#777f83")
       (C-8      "#63696d")
       (C-9      "#535150")
       (C-10     "#1f1e1e")
       (N-0      "#f2f2f2")
       (N-1      "#ebebeb")
       (N-2      "#e3e3e3")
       (N-3      "#dcdcdc")
       (N-4      "#c9c9c9")
       (N-5      "#b7b6b6")
       (N-6      "#a4a4a4")
       (N-7      "#858485")
       (N-8      "#6f6e6e")
       (N-9      "#535150")
       (N-10     "#1f1e1e")
       (T-0      "#f2f2f2")
       (T-1      "#f0f0ee")
       (T-2      "#e9e9e6")
       (T-3      "#dddcd7")
       (T-4      "#cac8c4")
       (T-5      "#b8b5b0")
       (T-6      "#a4a29e")
       (T-7      "#858380")
       (T-8      "#6f6d6a")
       (T-9      "#53504d")
       (T-10     "#1f1e1e")
       (W-00     "#f7f7f1")
       (W-0      "#f7f6f0")
       (W-1      "#eeede7")
       (W-2      "#eeede9")
       (W-3      "#dddcd5")
       (W-4      "#cac9c2")
       (W-5      "#b8b6b0")
       (W-6      "#a4a39c")
       (W-7      "#86847f")
       (W-8      "#6f6e69")
       (W-9      "#53504c")
       (W-10     "#1f1e1d")
       (FRV1     "#f9b0cb")
       (FYR1     "#ffd7a4")
       (FY1      "#fff9a0")
       (FYG1     "#dce4aa")
       (FV2      "#917fb3")
       (FYG2     "#afce15")
       (FBG2     "#80cde7")
       (FB2      "#0b93cd")

       (bg-min "#000000")
       (bg---  "#040405")
       (bg--   "#050606")
       (bg-    "#090A0B")
       (bg     "#121416")
       (bg+    "#1C1F22")
       (bg++   "#25292D")
       (bg+++  "#2E3339")
       (bg+max "#343A40")

       (fg-min C-6)
       (fg---  C-5)
       (fg--   C-4)
       (fg-    C-3)
       (fg     C-2)
       (fg+    C-1)
       (fg++   C-0)
       (fg+++  C-00)
       (fg+max "#ffffff")

       ;; ansi colours
       (bright-black   bg)
       (black          bg-min)
       (bright-white   fg+max)
       (white          fg)
       (bright-red     R24)
       (red            R27)
       (bright-green   G03)
       (green          G07)
       (bright-yellow  Y26)
       (yellow         Y19)
       (bright-blue    B05)
       (blue           B06)
       (bright-magenta V15)
       (magenta        V17)
       (bright-cyan    BG05)
       (cyan           BG07))

  (custom-theme-set-faces
   'nan

   ;; Default
   `(default               ((t (:foreground ,fg :background ,bg))))
   `(italic                ((t (:italic t))))
   `(cursor                ((t (:background ,fg+))))
   `(ffap                  ((t (:foreground ,fg+))))
   `(fringe                ((t (:background ,bg))))
   `(highlight             ((t (:background ,bg+))))
   `(line-number           ((t (:foreground ,fg-min))))
   `(lazy-highlight        ((t (:background ,B00))))
   `(link                  ((t (:foreground ,FBG2 :underline t))))
   `(minibuffer-prompt     ((t (:foreground ,FV2))))
   `(region                ((t (:background ,bg++))))
   `(show-paren-match-face ((t (:background ,B01))))
   `(vertical-border       ((t (:foreground ,bg+ :background ,bg+))))
   `(warning               ((t (:foreground ,R05))))

   ;; tty-menu
   `(tty-menu-enabled-face ((t (:foreground ,fg :background ,bg+))))
   `(tty-menu-disabled-face ((t (:foreground ,fg- :background ,bg+))))
   `(tty-menu-selected-face ((t (:foreground ,fg+ :background ,bg++ :weight bold))))

   ;; modeline
   `(mode-line ((t (:background ,bg++ :foreground ,fg+ :box nil))))
   `(mode-line-inactive ((t (:background ,bg+ :foreground ,fg- :box nil))))

   ;; flymake
   `(flymake-note ((t :background ,B05 :foreground ,bg)))
   `(flymake-warning ((t :background ,YR01 :foreground ,bg)))
   `(flymake-error ((t (:background ,R05 :foreground ,fg))))

   ;; Syntax highlighting
   `(font-lock-builtin-face ((t (:foreground ,FYG2))))
   `(font-lock-comment-face ((t (:foreground ,fg--- :background ,bg :inherit italic))))
   `(font-lock-comment-delimiter-face ((t (:foreground ,fg--- :background ,bg :inherit italic))))
   `(font-lock-constant-face ((t (:foreground ,FBG2))))
   `(font-lock-doc-face ((t (:foreground ,fg-- :inherit italic))))
   `(font-lock-function-name-face ((t (:foreground ,B05))))
   `(font-lock-keyword-face ((t (:foreground ,G03))))
   `(font-lock-negation-face ((t (:foreground ,R24))))
   `(font-lock-preprocessor-face ((t (:foreground ,YR12))))
   `(font-lock-regexp-grouping-construct ((t (:foreground ,BG15))))
   `(font-lock-regexp-grouping-backslash ((t (:foreground ,BG18))))
   `(font-lock-string-face ((t (:foreground ,YR65))))
   `(font-lock-type-face ((t (:foreground ,FV2))))
   `(font-lock-variable-name-face ((t (:foreground ,FB2))))
   `(font-lock-warning-face ((t (:foreground ,R05))))

   ;; lsp-ui
   `(lsp-ui-doc-background ((t (:background ,bg+))))
   `(lsp-ui-sideline-code-action ((t (:foreground ,YG06 :background ,bg+ :weight bold))))

   ;; rainbow-delimiters
   `(rainbow-delimiters-depth-1-face ((t :foreground ,R05)))
   `(rainbow-delimiters-depth-2-face ((t :foreground ,YR04)))
   `(rainbow-delimiters-depth-3-face ((t :foreground ,Y06)))
   `(rainbow-delimiters-depth-4-face ((t :foreground ,G03)))
   `(rainbow-delimiters-depth-5-face ((t :foreground ,BG05)))
   `(rainbow-delimiters-depth-6-face ((t :foreground ,B04)))
   `(rainbow-delimiters-depth-7-face ((t :foreground ,BV02)))
   `(rainbow-delimiters-depth-8-face ((t :foreground ,RV04)))
   `(rainbow-delimiters-unmatched-face ((t :foreground ,R05 :underline ,R05)))

   ;; company
   `(company-tooltip ((t (:foreground ,fg :background ,bg+ :bold t))))
   `(company-tooltip-selection ((t (:foreground ,fg+ :background ,bg++ :bold t))))
   `(company-tooltip-mouse ((t (:foreground ,fg+ :background ,bg+ :bold t))))
   `(company-tooltip-common ((t (:foreground ,fg+))))
   `(company-tooltip-common-selection ((t (:foreground ,fg++ :background ,bg++))))
   `(company-tooltip-annotation ((t (:foreground ,B02))))
   `(company-preview ((t (:foreground ,fg :background ,bg :bold t))))
   `(company-preview-common ((t (:foreground ,fg+ :background ,bg+ :bold t))))
   `(company-scrollbar-bg ((t (:background ,bg))))
   `(company-scrollbar-fg ((t (:background ,fg))))
   `(company-template-field ((t (:foreground ,B05))))

   ;; org-mode
   `(org-level-1 ((t (:foreground ,G03 :weight bold))))
   `(org-level-2 ((t (:foreground ,BG05 :weight bold))))
   `(org-level-3 ((t (:foreground ,B04 :weight bold))))
   `(org-level-4 ((t (:foreground ,BV02 :weight bold))))
   `(org-level-5 ((t (:foreground ,RV04 :weight bold))))
   `(org-level-6 ((t (:foreground ,R05 :weight bold))))
   `(org-level-7 ((t (:foreground ,YR16 :weight bold))))
   `(org-level-8 ((t (:foreground ,Y06 :weight bold))))

   `(org-todo ((t (:foreground ,YR04 :weight bold))))
   `(org-done ((t (:foreground ,G03 :weight bold))))

   `(org-agenda-structure ((t (:foreground ,fg---))))
   `(org-agenda-date-today ((t (:foreground ,fg+ :weight bold))))
   `(org-scheduled ((t (:foreground ,fg))))
   `(org-scheduled-previously ((t (:foreground ,R05))))
   `(org-scheduled-today ((t (:foreground ,fg))))
   `(org-upcoming-deadline ((t (:foreground ,B04))))

   `(org-drawer ((t (:foreground ,fg-min))))
   `(org-special-keyword ((t (:foreground ,FYG2 :weight bold))))
   `(org-tag ((t (:foreground ,FB2 :weight bold))))
   `(org-ellipsis ((t (:foreground ,fg-min))))
   `(org-warning ((t (:foreground ,R05 :weight bold))))

   ;; diff-hl
   `(diff-hl-insert ((t :foreground ,G43 :background ,G43)))
   `(diff-hl-change ((t :foreground ,YR14 :background ,YR14)))
   `(diff-hl-delete ((t :foreground ,R43, :background ,R43)))

   ;; magit
   `(magit-branch ((t (:foreground ,V17 :weight bold))))
   `(magit-branch-local ((t (:foreground ,V06 :weight bold))))
   `(magit-branch-remote ((t (:foreground ,V25 :weight bold))))
   `(magit-cherry-equivalent ((t (:foreground ,BG15 :weight bold))))
   `(magit-cherry-unmatched ((t (:foreground ,RV14 :weight bold))))
   `(magit-diff-added ((t (:foreground ,G43))))
   `(magit-diff-added-highlight ((t (:foreground ,G43 :background ,bg+))))
   `(magit-diff-context-highlight ((t (:background ,bg+))))
   `(magit-diff-file-header ((t (:foreground ,B45))))
   `(magit-diff-removed ((t (:foreground ,R43))))
   `(magit-diff-removed-highlight ((t (:foreground ,R43 :background ,bg+))))
   `(magit-diffstat-added ((t (:foreground ,G43))))
   `(magit-diffstat-removed ((t (:foreground ,R43))))
   `(magit-hash ((t (:foreground ,V17))))
   `(magit-head ((t (:foreground ,V95))))
   `(magit-hunk-heading ((t (:foreground ,B45))))
   `(magit-hunk-heading-highlight ((t (:foreground ,B45 :background ,bg+))))
   `(magit-item-highlight ((t (:foreground ,BV02 :background ,bg+))))
   `(magit-log-author ((t (:foreground ,YR04))))
   `(magit-log-graph ((t (:foreground ,fg-))))
   `(magit-log-head-label-bisect-bad ((t (:foreground ,R43 :box 1))))
   `(magit-log-head-label-bisect-good ((t (:foreground ,G43 :box 1))))
   `(magit-log-head-label-default ((t (:foreground ,fg+ :box 1))))
   `(magit-log-head-label-local ((t (:foreground ,V06 :box 1))))
   `(magit-log-head-label-patches ((t (:foreground ,YR14 :box 1))))
   `(magit-log-head-label-remote ((t (:foreground ,V25 :box 1))))
   `(magit-log-head-label-tags ((t (:foreground ,YG06 :box 1))))
   `(magit-log-sha1 ((t (:foreground ,BV01 :box 1))))
   `(magit-process-ng ((t (:foreground ,R43 :weight bold))))
   `(magit-process-ok ((t (:foreground ,G43 :weight bold))))
   `(magit-reflog-amend ((t (:foreground ,YR04))))
   `(magit-reflog-checkout ((t (:foreground ,YR04))))
   `(magit-reflog-cherry-pick ((t (:foreground ,R83))))
   `(magit-reflog-commit ((t (:foreground ,G85))))
   `(magit-reflog-merge ((t (:foreground ,BG53))))
   `(magit-reflog-other ((t (:foreground ,V91))))
   `(magit-reflog-rebase ((t (:foreground ,V17))))
   `(magit-reflog-remote ((t (:foreground ,V25))))
   `(magit-reflog-reset ((t (:foreground ,R05))))
   `(magit-section-heading ((t (:foreground ,BG45 :weight bold))))
   `(magit-section-highlight ((t (:background ,bg+))))
   `(magit-section-title ((t (:foreground ,BG05 :weight bold))))

   ;; whitespace
   `(whitespace-default ((t (:foreground ,fg-, :background ,bg))))
   `(whitespace-tab ((t (:foreground ,fg-- :inherit whitespace-default))))
   `(whitespace-line ((t (:foreground nil :background ,bg++))))
   )

  (custom-theme-set-variables
   'nan
   `(ansi-color-names-vector
     [,black ,red ,green ,yellow ,blue ,magenta ,cyan ,white])))

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'nan)
(provide 'nan-theme)

;;; nan-theme.el ends here
